<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Instruction of Deploy a Blog through Github Pages and Hexo</title>
    <link href="/2024/06/12/Instruction/Instruction/"/>
    <url>/2024/06/12/Instruction/Instruction/</url>
    
    <content type="html"><![CDATA[<h1id="instruction-of-deploy-a-blog-through-github-pages-and-hexo">Instructionof Deploy a Blog through Github Pages and Hexo</h1><p>This is an instruction of deploy a blog through Github Pages andHexo. Check <a href="https://hexo.io/docs/">documentation</a> for moreinfo.</p><h2 id="一初始化github-pages">一、初始化Github Pages</h2><h3 id="一目标">（一）目标</h3><p>部署带有一篇博客的个人博客网站，并且可以统计每一篇博客和整个网站的浏览量和浏览人数。</p><h3 id="二实现方法">（二）实现方法</h3><h3 id="注册个人github账号在自己电脑上安装git和nodejs">1. 注册个人<ahref="https://github.com/">Github账号</a>，在自己电脑上安装<ahref="https://git-scm.com/downloads">Git</a>和<ahref="https://nodejs.org/en">NodeJS</a></h3><p>NodeJS直接点击链接在网页里面找到LTS版本的符合自己电脑的安装包下载安装即可### 2. 在Github中创建一个公有仓库，仓库名为<用户名>.github.io ### 3.安装Hexo并初始化 - 在bash shell或者zsh shell中输入如下内容完成Hexo安装<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo npm install -g hexo-cli<br></code></pre></td></tr></table></figure></p><ul><li><p>待显示安装完成后，输入如下内容查看版本，检查是否正确安装<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo npm install -g hexo-cli<br></code></pre></td></tr></table></figure></p></li><li><p>在shell中转到用于存储Hexo项目的文件夹，输入如下内容创建一个新Hexo项目<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo init blog<br><span class="hljs-built_in">cd</span> blog<br>npm install<br></code></pre></td></tr></table></figure></p></li><li><p>在shell中输入如下内容，在本地生成相关静态文件(hexo g)并启动(hexos)，通过浏览器访问浏览器访问 <ahref="http://localhost:4000">http://localhost:4000</a> 查看效果<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo g<br>hexo s<br></code></pre></td></tr></table></figure></p></li><li><p>如果看到如下图片则说明部署成功</p><center><p><img src="hexo_init.jpg" alt="初始化后界面示意图" width="80%"/></p></center></li></ul><h3 id="更换fluid主题并配置相关字段使界面更加美观实用">4.更换Fluid主题，并配置相关字段，使界面更加美观实用</h3><ul><li><p>通过此网址<ahref="https://github.com/fluid-dev/hexo-theme-fluid">https://github.com/fluid-dev/hexo-theme-fluid</a>下载Fluid主题并将文件夹重命名为fluid，存放于blog/themes文件夹中</p></li><li><p>打开blog/_config.yml配置文件，修改theme，language和title等字段<figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">theme:</span> fluid <span class="hljs-meta"># 一定要改</span><br><span class="hljs-symbol">post_asset_folder:</span> true <span class="hljs-meta"># 一定要改，方面后期发布修改博客文章  </span><br><span class="hljs-symbol">language:</span> <span class="hljs-built_in">zh</span>-CN <span class="hljs-meta"># 酌情选择（决定导航栏的显示语言）</span><br><span class="hljs-symbol">title:</span> a blog <span class="hljs-meta"># 酌情设置（决定浏览器tab的显示内容）</span><br></code></pre></td></tr></table></figure></p></li><li><p>与上操作类似，打开blog/thems/fluid/_config.yml配置文件，修改blog_title，text等字段</p></li><li><p>在shell中输入如下代码，在Blog中添加About页面<figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haxe">hexo <span class="hljs-keyword">new</span> <span class="hljs-type">page</span> about<br></code></pre></td></tr></table></figure></p></li><li><p>之后可以在blog/source/about/index.md中修改文件调整页面内容</p></li><li><p>再次在shell中输入如下内容，通过浏览器访问浏览器访问 <ahref="http://localhost:4000">http://localhost:4000</a>查看更换主题后的效果 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo g<br>hexo s<br></code></pre></td></tr></table></figure></p></li></ul><h3 id="设置阅读量统计">5. 设置阅读量统计</h3><ul><li><p>进入<ahref="https://console.leancloud.cn/">LeanCloud官网</a>注册账号，实名认证并验证邮箱</p></li><li><p>如下图所示创建应用</p><center><p><img src="leancloud-1.jpg" alt="创建应用" width="80%"/></p></center></li><li><p>如下图所示，进入设置-应用凭证，记录AppID，AppKey和REST API服多器地址</p><center><p><img src="leancloud-2.jpg" alt="id and key" width="80%"/></p></center></li><li><p>如下图所示，创建类用于存储访问数据，类名必须严格按照图片中的类名设置</p><center><p><img src="leancloud-3.jpg" alt="id and key" width="80%"/></p></center></li><li><p>打开blog/thems/fluid/_config.yml配置文件,修改如下内容<figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-meta"># 一定要改</span><br><span class="hljs-symbol"></span><br><span class="hljs-symbol">web_analytics:</span><br><span class="hljs-symbol">  enable:</span> true <br><span class="hljs-symbol"></span><br><span class="hljs-symbol">leancloud:</span><br><span class="hljs-symbol">    app_id:</span> <span class="hljs-params">&lt;AppID&gt;</span><br><span class="hljs-symbol">    app_key:</span> <span class="hljs-params">&lt;AppKey&gt;</span><br><span class="hljs-symbol">    server_url:</span> <span class="hljs-params">&lt;REST API 服多器地址&gt;</span><br><span class="hljs-symbol"></span><br><span class="hljs-symbol">views:</span><br><span class="hljs-symbol">      enable:</span> true<br><span class="hljs-symbol">      source:</span> <span class="hljs-string">&quot;leancloud&quot;</span><br><span class="hljs-symbol">      format:</span> <span class="hljs-string">&quot;&#123;&#125; 次&quot;</span><br><span class="hljs-symbol"></span><br><span class="hljs-symbol">statistics:</span><br><span class="hljs-symbol">    enable:</span> true<br><span class="hljs-symbol">    source:</span> <span class="hljs-string">&quot;leancloud&quot;</span><br><span class="hljs-symbol">    pv_format:</span> <span class="hljs-string">&quot;总访问量 &#123;&#125; 次&quot;</span><br><span class="hljs-symbol">    uv_format:</span> <span class="hljs-string">&quot;总访客数 &#123;&#125; 人&quot;</span><br></code></pre></td></tr></table></figure></p></li><li><p>再次在shell中输入如下内容，通过浏览器访问浏览器访问 <ahref="http://localhost:4000">http://localhost:4000</a>查看是否在页面下方显示访问情况 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo g<br>hexo s<br></code></pre></td></tr></table></figure></p><center><p><img src="info.jpg" alt="info" width="80%"/></p></center></li></ul><h3 id="设置latex公式">6. 设置latex公式</h3><p>详见 <ahref="https://fluid-dev.github.io/hexo-fluid-docs/guide/#latex-数学公式">https://fluid-dev.github.io/hexo-fluid-docs/guide/#latex-数学公式</a></p><h3 id="上传至github">7. 上传至Github</h3><ul><li><p>安装hexo-deployer-git <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure></p></li><li><p>如图所示，获得Personal accesstokens，并注意在获得tokens时要选择Tokens(classic)并勾选repo</p></li><li><p>打开blog/_config.yml配置文件,设置部署参数 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">deploy:<br>  <span class="hljs-built_in">type</span>: git<br>  repo: https://&lt;你的Personal access tokens&gt;@github.com/&lt;你的Github用户名&gt;/&lt;你的Github用户名&gt;.github.io.git<br>  branch: main<br></code></pre></td></tr></table></figure></p></li><li><p>在shell中输入如下内容，通过浏览器访问浏览器访问(https://<你的Github用户名>.github.io/)查看是否部署成功<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo g -d<br></code></pre></td></tr></table></figure></p></li></ul><h2 id="二添加删除或修改博客文章">二、添加删除或修改博客文章</h2><h3 id="添加博客文章">1. 添加博客文章</h3><ul><li><p>方法1:在shell中转到项目文件夹blog，并在shell中输入如下内容，添加名字为new_article的博客文章，在blog/source/_posts中找到new_article.md和new_article文件夹，对其修改即可添加博客文章<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new post new_article<br></code></pre></td></tr></table></figure></p></li><li><p>方法2:在blog/source/_posts中创建一个文件夹，再在此文件夹里创建new_article.md和new_article文件夹，对其修改即可添加博客文章（也可以直接在blog/source/_posts里创建new_article.md和new_article文件夹）</p></li></ul><h3 id="删除或修改博客文章">2. 删除或修改博客文章</h3><p>在blog/source/_posts中找到xxx.md和xxx文件夹，对其删除或修改即可</p><h3 id="插入代码">3. 插入代码</h3><p>在md里输入如下代码即可</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text">``` python<br>import numpy as np<br>a = 1<br>print(a)<br>```<br></code></pre></td></tr></table></figure><h3 id="插入图片">4. 插入图片</h3><ul><li><p>方法1: 在xxx文件夹中存放test.jpg，并在xxx.md中输入以下代码</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">&#123;% asset_img test.jpg example %&#125;<br></code></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">&lt;center&gt;<br>&lt;img src=&quot;test.jpg&quot; alt=&quot;图片描述&quot; width=&quot;50%&quot;/&gt;<br>&lt;/center&gt;<br></code></pre></td></tr></table></figure></li><li><p>方法2: 找到图片的网址为xxx，并在xxx.md中输入以下代码<figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">&lt;center&gt;<br>&lt;img src=&quot;并在xxx.md中输入以下代码&quot; alt=&quot;图片名称&quot;   width=&quot;50%&quot;/&gt;<br>&lt;/center&gt;<br></code></pre></td></tr></table></figure></p></li></ul><h3id="在shell中输入如下内容通过浏览器访问浏览器访问httplocalhost4000-查看是否更改成功">5.在shell中输入如下内容，通过浏览器访问浏览器访问<ahref="http://localhost:4000">http://localhost:4000</a>查看是否更改成功</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo g<br>hexo s<br></code></pre></td></tr></table></figure><h2 id="三参考内容">三、参考内容</h2><h3 id="httpsblog.csdn.netyaorongkearticledetails119089190">1. <ahref="https://blog.csdn.net/yaorongke/article/details/119089190">https://blog.csdn.net/yaorongke/article/details/119089190</a></h3><h3 id="httpszhcano.github.ioleancloudhexo开启评论和文章阅读量">2. <ahref="https://zhcano.github.io/LeanCloud+Hexo开启评论和文章阅读量/">https://zhcano.github.io/LeanCloud+Hexo开启评论和文章阅读量/</a></h3><h3 id="httpsfluid-dev.github.iohexo-fluid-docsguide">3. <ahref="https://fluid-dev.github.io/hexo-fluid-docs/guide/">https://fluid-dev.github.io/hexo-fluid-docs/guide/</a></h3>]]></content>
    
    
    <categories>
      
      <category>Instruction</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Github Pages Deployment</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
